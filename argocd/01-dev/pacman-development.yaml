apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: pacman1-development
  namespace: openshift-gitops
spec:
  project: pacman1
  destination:
    namespace: pacman1-development
    server: https://kubernetes.default.svc
  ignoreDifferences:
    - group: argoproj.io
      jsonPointers:
        - /status
      kind: Application
    - group: triggers.tekton.dev
      jsonPointers:
        - /status
      kind: EventListener
    - group: triggers.tekton.dev
      jsonPointers:
        - /status
      kind: TriggerTemplate
    - group: triggers.tekton.dev
      jsonPointers:
        - /status
      kind: TriggerBinding
    - group: route.openshift.io
      jsonPointers:
        - /spec/host
      kind: Route
  source:
    chart: NaN
    targetRevision: 0.1.2
    repoURL: https://marrober.github.io/helm-charts/
    helm:
      releaseName: pacman-dev
      parameters:
        - name: deploymentName
          value: pacman
        - name: namespace
          value: pacman-development
        - name: image.repository
          value: image-registry.openshift-image-registry.svc:5000/pacman-ci/pacman
        - name: image.tag
          value: vgkpp
        - name: applicationFramework
          value: nodejs
        - name: applicationFrameworkVersion
          value: 16-ubi8
        - name: service.name
          value: pacman
        - name: service.type
          value: ClusterIP
        - name: service.port
          value: "8080"
        - name: service.portName
          value: 8080-tcp
        - name: service.targetPort
          value: "8080"
        - name: service.weight
          value: "100"
        - name: route.termination
          value: edge
        - name: clusterAPI
          value: apps.conroe.demolab.local
        - name: autoscaling.enabled
          value: "false"
        - name: autoscaling.minReplicas
          value: "1"
        - name: autoscaling.maxReplicas
          value: "100"
        - name: replicaCount
          value: "1"
        - name: autoscaling.targetCPUUtilizationPercentage
          value: "80"
  syncPolicy:
    automated: # automated sync by default retries failed attempts 5 times with following delays between attempts ( 5s, 10s, 20s, 40s, 80s ); retry controlled using `retry` field.
      prune: true # Specifies if resources should be pruned during auto-syncing ( false by default ).
      selfHeal: true # Specifies if partial app sync should be executed when resources are changed only in target Kubernetes cluster and no git change detected ( false by default ).
      allowEmpty: false # Allows deleting all application resources during automatic syncing ( false by default ).
    syncOptions: # Sync options which modifies sync behavior
      - Validate=true # disables resource validation (equivalent to 'kubectl apply --validate=false') ( true by default ).
      - CreateNamespace=true # Namespace Auto-Creation ensures that namespace specified as the application destination exists in the destination cluster.
      - PrunePropagationPolicy=foreground # Supported policies are background, foreground and orphan.
      - PruneLast=true # Allow the ability for resource pruning to happen as a final, implicit wave of a sync operation
    retry:
      limit: 1 # number of failed sync attempt retries; unlimited number of attempts if less than 0
      backoff:
        duration: 5s # the amount to back off. Default unit is seconds, but could also be a duration (e.g. "2m", "1h")
        factor: 2 # a factor to multiply the base duration after each failed retry
        maxDuration: 20s # the maximum amount of time allowed for the backoff strategy
status:
  health: {}
  summary: {}
  sync:
    comparedTo:
      destination: {}
      source:
        repoURL: ""
    status: ""
